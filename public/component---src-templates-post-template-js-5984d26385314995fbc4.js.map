{"version":3,"sources":["webpack:///./src/templates/postTemplate.js"],"names":["mapDispatchToProps","onSidebarContentSelected","onSetSidebarContentEntry","onSetAnchorHide","onSetSidebarHide","connect","state","selectedKey","getSidebarSelectedKey","sidebarEntry","getSidebarEntry","data","markdownRemark","frontmatter","html","id","hideAnchor","hideSidebar","sidebar","onPostPage","className","showTitle","align","title","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"2FAAA,sIAiDA,IAOMA,EAAqB,CACzBC,6BACAC,6BACAC,oBACAC,sBAGaC,uBAdS,SAACC,GACvB,MAAO,CACLC,YAAaC,YAAsBF,GACnCG,aAAcC,YAAgBJ,MAWMN,EAAzBK,EAlDf,YAQI,IAPFM,EAOC,EAPDA,KACAV,EAMC,EANDA,yBACAM,EAKC,EALDA,YACAL,EAIC,EAJDA,yBACAO,EAGC,EAHDA,aACAN,EAEC,EAFDA,gBACAC,EACC,EADDA,iBAEQQ,EAAmBD,EAAnBC,eACAC,EAA0BD,EAA1BC,YAAaC,EAAaF,EAAbE,KAAMC,EAAOH,EAAPG,GAErBC,EAAyC,OAA3BH,EAAYG,YAA+BH,EAAYG,WACrEC,EAAuC,OAAxBJ,EAAYK,QAQjC,OANAf,EAAgBa,GAChBZ,EAAiBa,GAEbV,IAAgBQ,GAAId,EAAyBc,GAC7CN,IAAiBI,EAAYK,SAAShB,EAAyBW,EAAYK,SAG7E,kBAAC,IAAD,CAAQC,YAAY,GACpB,yBAAKC,UAAU,uBACb,yBAAKA,UAAU,aACXP,EAAYQ,WAAa,wBAAIC,MAAM,UAAUT,EAAYU,OAC3D,yBACEH,UAAU,oBACVI,wBAAyB,CAAEC,OAAQX,WAwBtC,IAAMY,EAAS","file":"component---src-templates-post-template-js-5984d26385314995fbc4.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\";\nimport { connect } from 'react-redux'\nimport \"katex/dist/katex.min.css\"\nimport {\n  onSidebarContentSelected,\n  onSetSidebarContentEntry,\n  onSetAnchorHide,\n  onSetSidebarHide,\n} from '../actions/layout'\nimport { getSidebarSelectedKey, getSidebarEntry } from \"../store/selectors\";\n\nfunction Template({\n  data, // this prop will be injected by the GraphQL query below.\n  onSidebarContentSelected,\n  selectedKey,\n  onSetSidebarContentEntry,\n  sidebarEntry,\n  onSetAnchorHide,\n  onSetSidebarHide\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html, id } = markdownRemark\n\n  const hideAnchor = (frontmatter.hideAnchor === null) ? false : frontmatter.hideAnchor\n  const hideSidebar = (frontmatter.sidebar === null) ? true : false\n\n  onSetAnchorHide(hideAnchor)\n  onSetSidebarHide(hideSidebar)\n\n  if (selectedKey !== id) onSidebarContentSelected(id)\n  if (sidebarEntry !== frontmatter.sidebar) onSetSidebarContentEntry(frontmatter.sidebar)\n\n  return (\n    <Layout onPostPage={true}>\n    <div className=\"blog-post-container\">\n      <div className=\"blog-post\">\n        { frontmatter.showTitle && <h1 align=\"center\">{frontmatter.title}</h1> }\n        <div\n          className=\"blog-post-content\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n      </div>\n    </div>\n    </Layout>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedKey: getSidebarSelectedKey(state),\n    sidebarEntry: getSidebarEntry(state)\n  }\n}\n\nconst mapDispatchToProps = {\n  onSidebarContentSelected,\n  onSetSidebarContentEntry,\n  onSetAnchorHide,\n  onSetSidebarHide\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Template)\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(fields: { slug: { eq: $path} }) {\n      fields {\n        slug\n      }\n      id\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        sidebar\n        showTitle\n        hideAnchor\n      }\n    }\n  }\n`"],"sourceRoot":""}